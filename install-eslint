#!/bin/bash

npm install -g json
npm i -D eslint eslint-config-airbnb eslint-plugin-import eslint-watch
json -I -f package.json -e 'this.scripts.lint="eslint --fix frontend"'
json -I -f package.json -e 'this.scripts["lint:watch"]="esw --fix --watch frontend"'
echo '
{
  "max-len": 0,
  "extends": "airbnb",
  "rules": {
    "indent": ["error", 2, { "VariableDeclarator": 1 }],
    "no-underscore-dangle": ["error", { "allowAfterThis": true }],
    "arrow-body-style":0,
    "global-require": 0,
    "func-names": 0,
    "prefer-rest-params": 1,
    "strict": 2,
    "no-param-reassign": 0,
    "import/no-unresolved": 0,
    "new-cap": 1,
    "max-len": 1
  },
  "globals": {
    "ENV": "true"
  }
}
' > .eslintrc.json

echo '
#!/bin/bash

for file in $(git diff --cached --name-only | grep -E '\.(js|jsx)$')
do
  node_modules/.bin/eslint --fix "$file" # we only want to lint the staged changes, not any un-staged changes
  if [ $? -ne 0 ]; then
    echo -en "Нужно полинтить файл  \033[37;1;41m$file\033[0m. Проверь свой код и попробуй снова."
    printf "\nПока ты не приведешь код к красивому виду ты не сможешь сделать коммит.\n"
    git add "$file";
    exit 1 # exit with failure status
  else 
    git add "$file";
  fi
done
' > .githooks/pre-commit/lint
chmod +x .githooks/pre-commit/lint
